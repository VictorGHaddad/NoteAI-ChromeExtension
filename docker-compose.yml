version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: meeting-ai-db
    environment:
      POSTGRES_DB: audio_transcriber
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - audio-transcriber-network-3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: meeting-ai-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/audio_transcriber
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-1440}
      - MAX_AUDIO_SIZE_MB=${MAX_AUDIO_SIZE_MB:-200}
      - DEBUG=True
      - HOST=0.0.0.0
      - PORT=8000
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://10.0.0.111:3000,chrome-extension://*
    ports:
      - "0.0.0.0:8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - audio-transcriber-network-3

  # React Dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: meeting-ai-dashboard
    ports:
      - "0.0.0.0:3000:3000"
    # Removed volumes for production - code is copied during build
    # volumes:
    #   - ./dashboard:/app
    #   - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://10.0.0.111:8000/api
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - audio-transcriber-network-3

volumes:
  postgres_data:
    driver: local

networks:
  audio-transcriber-network-3:
    driver: bridge